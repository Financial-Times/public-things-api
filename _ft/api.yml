swagger: "2.0"

info:
  title: Public Things API
  description: Provides read access to concepts/things
  version: 0.0.0
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com
host: api.ft.com
schemes:
  - https
basePath: /
paths:
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: >
            Should always return 200 along with the output of the healthchecks - regardless
            of whether the healthchecks failed or not.
            Please inspect the overall ok property to see whether or not the application is healthy.
          examples:
            application/json:
              schemaVersion: 1
              systemCode: public-things-api
              name: PublicThingsApi
              description: Checks for accessing neo4j
              checks:
                - id: neo4j-connectivity-check
                  name: Check connectivity to Neo4j
                  ok: true
                  severity: 1
                  businessImpact: Unable to respond to Public Things api requests
                  technicalSummary: Cannot connect to Neo4j. If this check fails, check that Neo4j instance is up and running.
                  panicGuide: https://dewey.in.ft.com/view/system/public-things-api
                  checkOutput: Connectivity to neo4j is ok
                  lastUpdated: 2018-04-30T10:22:50.371968658Z
              ok: true
        400:
          description: Bad request if the uuid path parameter is  formatted formed or missing.
        404:
          description: Not Found if there is no thing record for the uuid path parameter is found.
        500:
          description: Internal Server Error if there was an issue processing the records.
        503:
          description: Service Unavailable if it cannot connect to Neo4j.
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      tags:
        - Health
      produces:
          - text/plain;  charset=UTF-8
      responses:
        200:
          description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
          examples:
               text/plain;  charset=UTF-8: OK
        503:
          description: >
            One or more of the applications healthchecks have failed,
            so please do not use the app. See the /__health endpoint for more detailed information.
  /__build-info:
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: 1.6.1
              repository: https://github.com/Financial-Times/public-things-api.git
              revision: 0cd10bc814ca820e3fe181be0fc05124971c7169
              builder: go version go1.10.1 linux/amd64
              dateTime: "20180420102900"
  /things/{uuid}:
    get:
      summary: Get a thing
      description: >
        Fetches the thing with the provided uuid
      produces:
        - application/json;  charset=UTF-8
      tags:
        - Public API
      parameters:
        - name: uuid
          in: path
          description: The UUID of the things
          x-example: de5fe64c-eaf8-3232-8a0b-19f9ccdd5bf0
          required: true
          type: string
        - name: showRelationship
          in: query
          type: array
          items:
            type: string
            enum:
              - broader
              - broaderTransitive
              - narrower
              - related
          required: false
      responses:
        200:
          description: Get thing response
          examples:
            application/json; charset=UTF-8:
              id: http://www.ft.com/thing/de5fe64c-eaf8-3232-8a0b-19f9ccdd5bf0
              apiUrl: http://api.ft.com/concepts/de5fe64c-eaf8-3232-8a0b-19f9ccdd5bf0
              prefLabel: Professor of the Month 
              aliases:
                - Professor of the Month
              isDeprecated: true
  # /things:
  #   get:
  #     parameters:
  #       - name: uuid
  #         in: query
  #         required: true
  #         type: array
  #         items:
  #           type: string
  #       - name: showRelationship
  #         in: query
  #         type: array
  #         items:
  #           type: string
  #           enum:
  #             - broader
  #             - broaderTransitive
  #             - narrower
  #             - related
  #         required: false
  #     produces:
  #       - application/json;  charset=UTF-8
  #     tags:
  #       - Public API
  #     description: >
  #       Fetches the things with the provided uuids collection
  #     responses:
  #       200:
  #         description: Get things response
  #         schema:
  #           type: object
  #           properties:
  #             things:
  #               type: object
  #         examples:
  #           application/json:
  #             things:
  #               id: http://api.ft.com/things/de5fe64c-eaf8-3232-8a0b-19f9ccdd5bf0
  #               apiUrl: http://api.ft.com/brands/de5fe64c-eaf8-3232-8a0b-19f9ccdd5bf0
  #               prefLabel: Professor of the Month
  #               types:
  #                 - http://www.ft.com/ontology/core/Thing
  #                 - http://www.ft.com/ontology/concept/Concept
  #                 - http://www.ft.com/ontology/classification/Classification
  #                 - http://www.ft.com/ontology/product/Brand
  #               directType: http://www.ft.com/ontology/product/Brand
  #               aliases:
  #                 - Professor of the Month
